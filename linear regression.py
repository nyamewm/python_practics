import numpy as np
from sklearn.linear_model import LinearRegression, Ridge, Lasso
from sklearn.metrics import mean_squared_error

X = np.array([[5.03289682, 5.34552283, 2.07141819],
              [4.11515022, 1.74574331, 2.28535338],
              [4.09266859, 4.15797567, 2.40674952],
              [3.24671823, 1.9431731, 2.14231276],
              [3.25106958, 3.80472808, 3.08263283],
              [2.52501323, 3.21244044, 4.52117683],
              [4.2476642, 3.81474552, 4.46194181],
              [5.67007269, 2.54318039, 4.35382156],
              [3.96372826, 3.55880558, 2.26142837],
              [3.08257124, 3.31227501, 4.12215561],
              [4.12508403, 4.76008579, 2.83127566],
              [3.75295828, 0.94978358, 3.77319586],
              [3.72127748, 4.47875116, 3.19203064],
              [2.55585266, 5.67876118, 3.76603765],
              [4.07394745, 6.04189371, 2.80888774],
              [2.37558298, 2.9994123, 5.47112766],
              [4.97150747, 3.1587724, 3.2275306],
              [3.15385075, 4.39466827, 4.38915413],
              [5.24760789, 3.69955063, 4.55457772],
              [2.28243679, 3.22184457, 3.27857075]])
y = np.array([125.63684278, 34.83190291, 70.36761777, -32.18757625,
              64.08916402, 62.88015696, 173.62267736, 252.25678058,
              55.41992989, 68.22033914, 136.03523218, 84.89944033,
              73.84731433, 65.7062547, 131.83512224, 115.9471515,
              160.13536044, 140.2477672, 264.84763623, 9.30283739])

X_test = np.array([[4.81671758, -0.86163031, 4.64703587],
                   [4.08660482, 4.82792446, 1.30512789],
                   [3.32288193, 3.02935058, 5.77762757],
                   [4.93309804, 4.60826543, 2.60854585],
                   [2.63733815, 3.14903552, 1.61373951],
                   [5.05324667, 5.48895445, 2.22196551],
                   [5.13555134, 5.27913733, 1.47356868],
                   [1.92653257, 2.14312766, 4.60210482],
                   [4.93247091, 2.99578285, 2.13389966],
                   [3.29567651, 5.73691447, 3.04859666]])
y_test = np.array([83.64731808, 136.54826443, 141.162327, 125.085365,
                   -30.69662793, 126.91154582, 125.42563993, 115.93317592,
                   159.41693137, 126.31961374])


def model_realization(X, y, X_test, y_test, model):
    model.fit(X, y)
    y_pred = model.predict(X)
    mse = mean_squared_error(y_pred, y)
    y_pred_test = model.predict(X_test)
    mse_test = mean_squared_error(y_pred_test, y_test)
    print(f"Коэффициенты для всех столбцов: {model.coef_}, свободный член: {model.intercept_}")
    print(f"mse ошибка на исходных данных: {mse}")
    print(f"mse ошибка на тестовых данных: {mse_test}")
    print()


# стандартная модель

model_lin_regr = LinearRegression()
print("Линейная регрессия через стандартную модель")
model_realization(X, y, X_test, y_test, model_lin_regr)

# модель Риджа
alpha = 5  # для коэффициента alpha можно в цикле подобрать значение так, чтобы ошибка стала минимальной
model_ridge = Ridge(alpha)
print("Линейная регрессия через модель Риджа")
print(f"alpha =  {alpha}")
model_realization(X, y, X_test, y_test, model_ridge)

#модель Лассо
alpha = 5 # для коэффициента alpha можно в цикле подобрать значение так, чтобы ошибка стала минимальной
model_lasso = Lasso(alpha)
print("Линейная регрессия через модель Лассо")
print(f"alpha =  {alpha}")
model_realization(X, y, X_test, y_test, model_lasso)

